// Autogenerated by:
// ../../src/tools/ftrace_proto_gen/ftrace_proto_gen.cc
// Do not edit.

syntax = "proto2";
package perfetto.protos;

message Cfg80211AssocComebackFtraceEvent {
  optional uint32 id = 1;
  optional uint64 ap_addr = 2;
  optional uint32 timeout = 3;
}
message Cfg80211BssColorNotifyFtraceEvent {
  optional string name = 1;
  optional int32 ifindex = 2;
  optional uint32 cmd = 3;
  optional uint32 count = 4;
  optional uint64 color_bitmap = 5;
}
message Cfg80211CacEventFtraceEvent {
  optional string name = 1;
  optional int32 ifindex = 2;
  optional uint32 evt = 3;
}
message Cfg80211ChandefDfsRequiredFtraceEvent {
  optional string wiphy_name = 1;
  optional uint32 band = 2;
  optional uint32 control_freq = 3;
  optional uint32 width = 4;
  optional uint32 center_freq1 = 5;
  optional uint32 center_freq2 = 6;
  optional uint32 freq_offset = 7;
  optional uint32 freq1_offset = 8;
}
message Cfg80211ChSwitchNotifyFtraceEvent {
  optional string name = 1;
  optional int32 ifindex = 2;
  optional uint32 band = 3;
  optional uint32 control_freq = 4;
  optional uint32 width = 5;
  optional uint32 center_freq1 = 6;
  optional uint32 center_freq2 = 7;
  optional uint32 freq_offset = 8;
  optional uint32 freq1_offset = 9;
  optional uint32 link_id = 10;
}
message Cfg80211ChSwitchStartedNotifyFtraceEvent {
  optional string name = 1;
  optional int32 ifindex = 2;
  optional uint32 band = 3;
  optional uint32 control_freq = 4;
  optional uint32 freq_offset = 5;
  optional uint32 width = 6;
  optional uint32 center_freq1 = 7;
  optional uint32 freq1_offset = 8;
  optional uint32 center_freq2 = 9;
  optional uint32 link_id = 10;
}
message Cfg80211ControlPortTxStatusFtraceEvent {
  optional uint32 id = 1;
  optional uint64 cookie = 2;
  optional uint32 ack = 3;
}
message Cfg80211CqmPktlossNotifyFtraceEvent {
  optional string name = 1;
  optional int32 ifindex = 2;
  optional uint64 peer = 3;
  optional uint32 num_packets = 4;
}
message Cfg80211CqmRssiNotifyFtraceEvent {
  optional string name = 1;
  optional int32 ifindex = 2;
  optional uint32 rssi_event = 3;
  optional int32 rssi_level = 4;
}
message Cfg80211DelStaFtraceEvent {
  optional string name = 1;
  optional int32 ifindex = 2;
  optional uint64 macaddr = 3;
}
message Cfg80211FtEventFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint32 ies = 4;
  optional uint64 target_ap = 5;
  optional uint32 ric_ies = 6;
}
message Cfg80211GetBssFtraceEvent {
  optional string wiphy_name = 1;
  optional uint32 band = 2;
  optional uint32 center_freq = 3;
  optional uint64 bssid = 4;
  optional uint32 ssid = 5;
  optional uint32 capa_mask = 6;
  optional uint32 capa_val = 7;
  optional uint32 freq_offset = 8;
  optional uint32 bss_type = 9;
  optional uint32 privacy = 10;
}
message Cfg80211GtkRekeyNotifyFtraceEvent {
  optional string name = 1;
  optional int32 ifindex = 2;
  optional uint64 macaddr = 3;
}
message Cfg80211IbssJoinedFtraceEvent {
  optional string name = 1;
  optional int32 ifindex = 2;
  optional uint64 addr = 3;
  optional uint64 bssid = 4;
  optional uint32 band = 5;
  optional uint32 center_freq = 6;
  optional uint32 freq_offset = 7;
}
message Cfg80211InformBssFrameFtraceEvent {
  optional string wiphy_name = 1;
  optional uint32 band = 2;
  optional uint32 center_freq = 3;
  optional uint32 mgmt = 4;
  optional int32 signal = 5;
  optional uint32 freq_offset = 6;
  optional uint32 scan_width = 7;
  optional uint64 ts_boottime = 8;
  optional uint64 parent_tsf = 9;
  optional uint64 parent_bssid = 10;
}
message Cfg80211MgmtTxStatusFtraceEvent {
  optional uint32 id = 1;
  optional uint64 cookie = 2;
  optional uint32 ack = 3;
}
message Cfg80211MichaelMicFailureFtraceEvent {
  optional string name = 1;
  optional int32 ifindex = 2;
  optional uint64 addr = 3;
  optional uint32 key_type = 4;
  optional int32 key_id = 5;
  optional uint64 tsc = 6;
}
message Cfg80211NewStaFtraceEvent {
  optional string name = 1;
  optional int32 ifindex = 2;
  optional uint64 mac_addr = 3;
  optional int32 generation = 4;
  optional uint32 connected_time = 5;
  optional uint32 inactive_time = 6;
  optional uint32 rx_bytes = 7;
  optional uint32 tx_bytes = 8;
  optional uint32 rx_packets = 9;
  optional uint32 tx_packets = 10;
  optional uint32 tx_retries = 11;
  optional uint32 tx_failed = 12;
  optional uint32 rx_dropped_misc = 13;
  optional uint32 beacon_loss_count = 14;
  optional uint32 llid = 15;
  optional uint32 plid = 16;
  optional uint32 plink_state = 17;
}
message Cfg80211NotifyNewPeerCandidateFtraceEvent {
  optional string name = 1;
  optional int32 ifindex = 2;
  optional uint64 macaddr = 3;
}
message Cfg80211PmksaCandidateNotifyFtraceEvent {
  optional string name = 1;
  optional int32 ifindex = 2;
  optional int32 index = 3;
  optional uint64 bssid = 4;
  optional uint32 preauth = 5;
}
message Cfg80211PmsrCompleteFtraceEvent {
  optional string wiphy_name = 1;
  optional uint32 id = 2;
  optional uint64 cookie = 3;
}
message Cfg80211PmsrReportFtraceEvent {
  optional string wiphy_name = 1;
  optional uint32 id = 2;
  optional uint64 cookie = 3;
  optional uint64 addr = 4;
}
message Cfg80211ProbeStatusFtraceEvent {
  optional string name = 1;
  optional int32 ifindex = 2;
  optional uint64 addr = 3;
  optional uint64 cookie = 4;
  optional uint32 acked = 5;
}
message Cfg80211RadarEventFtraceEvent {
  optional string wiphy_name = 1;
  optional uint32 band = 2;
  optional uint32 control_freq = 3;
  optional uint32 width = 4;
  optional uint32 center_freq1 = 5;
  optional uint32 center_freq2 = 6;
  optional uint32 freq_offset = 7;
  optional uint32 freq1_offset = 8;
  optional uint32 offchan = 9;
}
message Cfg80211ReadyOnChannelFtraceEvent {
  optional uint32 id = 1;
  optional uint64 cookie = 2;
  optional uint32 band = 3;
  optional uint32 center_freq = 4;
  optional uint32 duration = 5;
  optional uint32 freq_offset = 6;
}
message Cfg80211ReadyOnChannelExpiredFtraceEvent {
  optional uint32 id = 1;
  optional uint64 cookie = 2;
  optional uint32 band = 3;
  optional uint32 center_freq = 4;
  optional uint32 freq_offset = 5;
}
message Cfg80211RegCanBeaconFtraceEvent {
  optional string wiphy_name = 1;
  optional uint32 band = 2;
  optional uint32 control_freq = 3;
  optional uint32 width = 4;
  optional uint32 center_freq1 = 5;
  optional uint32 center_freq2 = 6;
  optional uint32 freq_offset = 7;
  optional uint32 freq1_offset = 8;
  optional uint32 iftype = 9;
  optional uint32 check_no_ir = 10;
}
message Cfg80211ReportObssBeaconFtraceEvent {
  optional string wiphy_name = 1;
  optional int32 freq = 2;
  optional int32 sig_dbm = 3;
}
message Cfg80211ReportWowlanWakeupFtraceEvent {
  optional string wiphy_name = 1;
  optional uint32 id = 2;
  optional uint32 non_wireless = 3;
  optional uint32 disconnect = 4;
  optional uint32 magic_pkt = 5;
  optional uint32 gtk_rekey_failure = 6;
  optional uint32 eap_identity_req = 7;
  optional uint32 four_way_handshake = 8;
  optional uint32 rfkill_release = 9;
  optional int32 pattern_idx = 10;
  optional uint32 packet_len = 11;
  optional uint32 packet = 12;
}
message Cfg80211ReturnBoolFtraceEvent {
  optional uint32 ret = 1;
}
message Cfg80211ReturnBssFtraceEvent {
  optional uint64 bssid = 1;
  optional uint32 band = 2;
  optional uint32 center_freq = 3;
  optional uint32 freq_offset = 4;
}
message Cfg80211ReturnU32FtraceEvent {
  optional uint32 ret = 1;
}
message Cfg80211ReturnUintFtraceEvent {
  optional uint32 ret = 1;
}
message Cfg80211RxControlPortFtraceEvent {
  optional string name = 1;
  optional int32 ifindex = 2;
  optional int32 len = 3;
  optional uint64 from = 4;
  optional uint32 proto = 5;
  optional uint32 unencrypted = 6;
}
message Cfg80211RxMgmtFtraceEvent {
  optional uint32 id = 1;
  optional int32 freq = 2;
  optional int32 sig_mbm = 3;
  optional int32 sig_dbm = 4;
}
message Cfg80211RxMlmeMgmtFtraceEvent {
  optional string name = 1;
  optional int32 ifindex = 2;
  optional uint32 frame = 3;
}
message Cfg80211RxSpuriousFrameFtraceEvent {
  optional string name = 1;
  optional int32 ifindex = 2;
  optional uint64 addr = 3;
}
message Cfg80211RxUnexpected4addrFrameFtraceEvent {
  optional string name = 1;
  optional int32 ifindex = 2;
  optional uint64 addr = 3;
}
message Cfg80211RxUnprotMlmeMgmtFtraceEvent {
  optional string name = 1;
  optional int32 ifindex = 2;
  optional uint32 frame = 3;
}
message Cfg80211ScanDoneFtraceEvent {
  optional uint32 n_channels = 1;
  optional uint32 ie = 2;
  optional uint32 wdev_id = 3;
  optional uint64 wiphy_mac = 4;
  optional uint32 no_cck = 5;
  optional uint32 aborted = 6;
  optional uint64 scan_start_tsf = 7;
  optional uint64 tsf_bssid = 8;
}
message Cfg80211SchedScanResultsFtraceEvent {
  optional string wiphy_name = 1;
  optional uint64 id = 2;
}
message Cfg80211SchedScanStoppedFtraceEvent {
  optional string wiphy_name = 1;
  optional uint64 id = 2;
}
message Cfg80211SendAssocFailureFtraceEvent {
  optional string name = 1;
  optional int32 ifindex = 2;
  optional uint64 ap_addr = 3;
  optional uint32 timeout = 4;
}
message Cfg80211SendAuthTimeoutFtraceEvent {
  optional string name = 1;
  optional int32 ifindex = 2;
  optional uint64 mac = 3;
}
message Cfg80211SendRxAssocFtraceEvent {
  optional string name = 1;
  optional int32 ifindex = 2;
  optional uint64 bssid = 3;
  optional uint32 band = 4;
  optional uint32 center_freq = 5;
  optional uint32 freq_offset = 6;
  optional uint64 ap_addr = 7;
}
message Cfg80211SendRxAuthFtraceEvent {
  optional string name = 1;
  optional int32 ifindex = 2;
}
message Cfg80211StopIfaceFtraceEvent {
  optional string wiphy_name = 1;
  optional uint32 id = 2;
}
message Cfg80211TdlsOperRequestFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint64 peer = 4;
  optional uint32 oper = 5;
  optional uint32 reason_code = 6;
}
message Cfg80211TxMgmtExpiredFtraceEvent {
  optional uint32 id = 1;
  optional uint64 cookie = 2;
  optional uint32 band = 3;
  optional uint32 center_freq = 4;
  optional uint32 freq_offset = 5;
}
message Cfg80211TxMlmeMgmtFtraceEvent {
  optional string name = 1;
  optional int32 ifindex = 2;
  optional uint32 frame = 3;
  optional int32 reconnect = 4;
}
message Cfg80211UpdateOweInfoEventFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint64 peer = 4;
  optional uint32 ie = 5;
}
message RdevAbortPmsrFtraceEvent {
  optional string wiphy_name = 1;
  optional uint32 id = 2;
  optional uint64 cookie = 3;
}
message RdevAbortScanFtraceEvent {
  optional string wiphy_name = 1;
  optional uint32 id = 2;
}
message RdevAddIntfLinkFtraceEvent {
  optional string wiphy_name = 1;
  optional uint32 id = 2;
  optional uint32 link_id = 3;
}
message RdevAddKeyFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint64 mac_addr = 4;
  optional uint32 key_index = 5;
  optional uint32 pairwise = 6;
  optional uint32 mode = 7;
  optional int32 link_id = 8;
}
message RdevAddLinkStationFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint64 mld_mac = 4;
  optional uint64 link_mac = 5;
  optional uint32 link_id = 6;
  optional uint32 supported_rates = 7;
  optional uint32 opmode_notif = 8;
  optional uint32 opmode_notif_used = 9;
  optional uint32 he_capa = 10;
  optional uint32 he_6ghz_capa = 11;
  optional uint32 eht_capa = 12;
}
message RdevAddMpathFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint64 dst = 4;
  optional uint64 next_hop = 5;
}
message RdevAddNanFuncFtraceEvent {
  optional string wiphy_name = 1;
  optional uint32 id = 2;
  optional uint32 func_type = 3;
  optional uint64 cookie = 4;
}
message RdevAddStationFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint64 sta_mac = 4;
  optional uint32 sta_flags_mask = 5;
  optional uint32 sta_flags_set = 6;
  optional uint32 sta_modify_mask = 7;
  optional int32 listen_interval = 8;
  optional uint32 aid = 9;
  optional uint32 plink_action = 10;
  optional uint32 plink_state = 11;
  optional uint32 uapsd_queues = 12;
  optional uint32 capability = 13;
  optional uint32 max_sp = 14;
  optional uint32 opmode_notif = 15;
  optional uint32 opmode_notif_used = 16;
  optional string vlan = 17;
  optional uint32 supported_rates = 18;
  optional uint32 ext_capab = 19;
  optional uint32 supported_channels = 20;
  optional uint32 supported_oper_classes = 21;
}
message RdevAddTxTsFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint64 peer = 4;
  optional uint32 tsid = 5;
  optional uint32 user_prio = 6;
  optional uint32 admitted_time = 7;
}
message RdevAddVirtualIntfFtraceEvent {
  optional string wiphy_name = 1;
  optional string vir_intf_name = 2;
  optional uint32 type = 3;
}
message RdevAssocFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint64 bssid = 4;
  optional uint64 prev_bssid = 5;
  optional uint32 use_mfp = 6;
  optional uint32 flags = 7;
  optional uint32 elements = 8;
  optional uint32 fils_kek = 9;
  optional uint32 fils_nonces = 10;
}
message RdevAuthFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint64 bssid = 4;
  optional uint32 auth_type = 5;
}
message RdevCancelRemainOnChannelFtraceEvent {
  optional string wiphy_name = 1;
  optional uint32 id = 2;
  optional uint64 cookie = 3;
}
message RdevChangeBeaconFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint32 head = 4;
  optional uint32 tail = 5;
  optional uint32 beacon_ies = 6;
  optional uint32 proberesp_ies = 7;
  optional uint32 assocresp_ies = 8;
  optional uint32 probe_resp = 9;
  optional int32 link_id = 10;
}
message RdevChangeBssFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional int32 use_cts_prot = 4;
  optional int32 use_short_preamble = 5;
  optional int32 use_short_slot_time = 6;
  optional int32 ap_isolate = 7;
  optional int32 ht_opmode = 8;
}
message RdevChangeMpathFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint64 dst = 4;
  optional uint64 next_hop = 5;
}
message RdevChangeStationFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint64 sta_mac = 4;
  optional uint32 sta_flags_mask = 5;
  optional uint32 sta_flags_set = 6;
  optional uint32 sta_modify_mask = 7;
  optional int32 listen_interval = 8;
  optional uint32 aid = 9;
  optional uint32 plink_action = 10;
  optional uint32 plink_state = 11;
  optional uint32 uapsd_queues = 12;
  optional uint32 capability = 13;
  optional uint32 max_sp = 14;
  optional uint32 opmode_notif = 15;
  optional uint32 opmode_notif_used = 16;
  optional string vlan = 17;
  optional uint32 supported_rates = 18;
  optional uint32 ext_capab = 19;
  optional uint32 supported_channels = 20;
  optional uint32 supported_oper_classes = 21;
}
message RdevChangeVirtualIntfFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint32 type = 4;
}
message RdevChannelSwitchFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint32 band = 4;
  optional uint32 control_freq = 5;
  optional uint32 freq_offset = 6;
  optional uint32 width = 7;
  optional uint32 center_freq1 = 8;
  optional uint32 freq1_offset = 9;
  optional uint32 center_freq2 = 10;
  optional uint32 radar_required = 11;
  optional uint32 block_tx = 12;
  optional uint32 count = 13;
  optional uint32 bcn_ofs = 14;
  optional uint32 pres_ofs = 15;
}
message RdevColorChangeFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint32 count = 4;
  optional uint32 bcn_ofs = 5;
  optional uint32 pres_ofs = 6;
}
message RdevConnectFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint64 bssid = 4;
  optional uint32 auth_type = 5;
  optional uint32 privacy = 6;
  optional uint32 wpa_versions = 7;
  optional uint32 flags = 8;
  optional uint64 prev_bssid = 9;
  optional string ssid = 10;
}
message RdevCritProtoStartFtraceEvent {
  optional string wiphy_name = 1;
  optional uint32 id = 2;
  optional uint32 proto = 3;
  optional uint32 duration = 4;
}
message RdevCritProtoStopFtraceEvent {
  optional string wiphy_name = 1;
  optional uint32 id = 2;
}
message RdevDeauthFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint64 bssid = 4;
  optional uint32 reason_code = 5;
}
message RdevDelIntfLinkFtraceEvent {
  optional string wiphy_name = 1;
  optional uint32 id = 2;
  optional uint32 link_id = 3;
}
message RdevDelKeyFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint64 mac_addr = 4;
  optional uint32 key_index = 5;
  optional uint32 pairwise = 6;
  optional int32 link_id = 7;
}
message RdevDelLinkStationFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint64 mld_mac = 4;
  optional uint32 link_id = 5;
}
message RdevDelMpathFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint64 sta_mac = 4;
}
message RdevDelNanFuncFtraceEvent {
  optional string wiphy_name = 1;
  optional uint32 id = 2;
  optional uint64 cookie = 3;
}
message RdevDelPmkFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint64 aa = 4;
}
message RdevDelPmksaFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint64 bssid = 4;
}
message RdevDelStationFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint64 sta_mac = 4;
  optional uint32 subtype = 5;
  optional uint32 reason_code = 6;
}
message RdevDelTxTsFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint64 peer = 4;
  optional uint32 tsid = 5;
}
message RdevDelVirtualIntfFtraceEvent {
  optional string wiphy_name = 1;
  optional uint32 id = 2;
}
message RdevDisassocFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint64 bssid = 4;
  optional uint32 reason_code = 5;
  optional uint32 local_state_change = 6;
}
message RdevDisconnectFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint32 reason_code = 4;
}
message RdevDumpMpathFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint64 dst = 4;
  optional uint64 next_hop = 5;
  optional int32 idx = 6;
}
message RdevDumpMppFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint64 dst = 4;
  optional uint64 mpp = 5;
  optional int32 idx = 6;
}
message RdevDumpStationFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint64 sta_mac = 4;
  optional int32 idx = 5;
}
message RdevDumpSurveyFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional int32 idx = 4;
}
message RdevEndCacFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
}
message RdevExternalAuthFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint64 bssid = 4;
  optional uint32 status = 5;
}
message RdevFlushPmksaFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
}
message RdevGetAntennaFtraceEvent {
  optional string wiphy_name = 1;
}
message RdevGetChannelFtraceEvent {
  optional string wiphy_name = 1;
  optional uint32 id = 2;
  optional uint32 link_id = 3;
}
message RdevGetFtmResponderStatsFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint64 timestamp = 4;
  optional uint32 success_num = 5;
  optional uint32 partial_num = 6;
  optional uint32 failed_num = 7;
  optional uint32 asap_num = 8;
  optional uint32 non_asap_num = 9;
  optional uint64 duration = 10;
  optional uint32 unknown_triggers = 11;
  optional uint32 reschedule = 12;
  optional uint32 out_of_window = 13;
}
message RdevGetKeyFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint64 mac_addr = 4;
  optional uint32 key_index = 5;
  optional uint32 pairwise = 6;
  optional int32 link_id = 7;
}
message RdevGetMeshConfigFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
}
message RdevGetMpathFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint64 dst = 4;
  optional uint64 next_hop = 5;
}
message RdevGetMppFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint64 dst = 4;
  optional uint64 mpp = 5;
}
message RdevGetStationFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint64 sta_mac = 4;
}
message RdevGetTxPowerFtraceEvent {
  optional string wiphy_name = 1;
  optional uint32 id = 2;
}
message RdevGetTxqStatsFtraceEvent {
  optional string wiphy_name = 1;
  optional uint32 id = 2;
}
message RdevJoinIbssFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint64 bssid = 4;
  optional string ssid = 5;
}
message RdevJoinMeshFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint32 dot11MeshRetryTimeout = 4;
  optional uint32 dot11MeshConfirmTimeout = 5;
  optional uint32 dot11MeshHoldingTimeout = 6;
  optional uint32 dot11MeshMaxPeerLinks = 7;
  optional uint32 dot11MeshMaxRetries = 8;
  optional uint32 dot11MeshTTL = 9;
  optional uint32 element_ttl = 10;
  optional uint32 auto_open_plinks = 11;
  optional uint32 dot11MeshNbrOffsetMaxNeighbor = 12;
  optional uint32 dot11MeshHWMPmaxPREQretries = 13;
  optional uint32 path_refresh_time = 14;
  optional uint32 dot11MeshHWMPactivePathTimeout = 15;
  optional uint32 min_discovery_timeout = 16;
  optional uint32 dot11MeshHWMPpreqMinInterval = 17;
  optional uint32 dot11MeshHWMPperrMinInterval = 18;
  optional uint32 dot11MeshHWMPnetDiameterTraversalTime = 19;
  optional uint32 dot11MeshHWMPRootMode = 20;
  optional uint32 dot11MeshHWMPRannInterval = 21;
  optional uint32 dot11MeshGateAnnouncementProtocol = 22;
  optional uint32 dot11MeshForwarding = 23;
  optional int32 rssi_threshold = 24;
  optional uint32 ht_opmode = 25;
  optional uint32 dot11MeshHWMPactivePathToRootTimeout = 26;
  optional uint32 dot11MeshHWMProotInterval = 27;
  optional uint32 dot11MeshHWMPconfirmationInterval = 28;
  optional uint32 dot11MeshNolearn = 29;
}
message RdevJoinOcbFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
}
message RdevLeaveIbssFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
}
message RdevLeaveMeshFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
}
message RdevLeaveOcbFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
}
message RdevLibertasSetMeshChannelFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint32 band = 4;
  optional uint32 center_freq = 5;
  optional uint32 freq_offset = 6;
}
message RdevMgmtTxFtraceEvent {
  optional string wiphy_name = 1;
  optional uint32 id = 2;
  optional uint32 band = 3;
  optional uint32 center_freq = 4;
  optional uint32 offchan = 5;
  optional uint32 wait = 6;
  optional uint32 no_cck = 7;
  optional uint32 dont_wait_for_ack = 8;
  optional uint32 freq_offset = 9;
}
message RdevMgmtTxCancelWaitFtraceEvent {
  optional string wiphy_name = 1;
  optional uint32 id = 2;
  optional uint64 cookie = 3;
}
message RdevModLinkStationFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint64 mld_mac = 4;
  optional uint64 link_mac = 5;
  optional uint32 link_id = 6;
  optional uint32 supported_rates = 7;
  optional uint32 opmode_notif = 8;
  optional uint32 opmode_notif_used = 9;
  optional uint32 he_capa = 10;
  optional uint32 he_6ghz_capa = 11;
  optional uint32 eht_capa = 12;
}
message RdevNanChangeConfFtraceEvent {
  optional string wiphy_name = 1;
  optional uint32 id = 2;
  optional uint32 master_pref = 3;
  optional uint32 bands = 4;
  optional uint32 changes = 5;
}
message RdevProbeClientFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint64 peer = 4;
}
message RdevProbeMeshLinkFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint64 dest = 4;
}
message RdevRemainOnChannelFtraceEvent {
  optional string wiphy_name = 1;
  optional uint32 id = 2;
  optional uint32 band = 3;
  optional uint32 center_freq = 4;
  optional uint32 duration = 5;
  optional uint32 freq_offset = 6;
}
message RdevResetTidConfigFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint64 peer = 4;
  optional uint32 tids = 5;
}
message RdevResumeFtraceEvent {
  optional string wiphy_name = 1;
}
message RdevReturnChandefFtraceEvent {
  optional string wiphy_name = 1;
  optional int32 ret = 2;
  optional uint32 band = 3;
  optional uint32 control_freq = 4;
  optional uint32 width = 5;
  optional uint32 center_freq1 = 6;
  optional uint32 center_freq2 = 7;
  optional uint32 freq_offset = 8;
  optional uint32 freq1_offset = 9;
}
message RdevReturnIntFtraceEvent {
  optional string wiphy_name = 1;
  optional int32 ret = 2;
}
message RdevReturnIntCookieFtraceEvent {
  optional string wiphy_name = 1;
  optional int32 ret = 2;
  optional uint64 cookie = 3;
}
message RdevReturnIntIntFtraceEvent {
  optional string wiphy_name = 1;
  optional int32 func_ret = 2;
  optional int32 func_fill = 3;
}
message RdevReturnIntMeshConfigFtraceEvent {
  optional string wiphy_name = 1;
  optional uint32 dot11MeshRetryTimeout = 2;
  optional uint32 dot11MeshConfirmTimeout = 3;
  optional uint32 dot11MeshHoldingTimeout = 4;
  optional uint32 dot11MeshMaxPeerLinks = 5;
  optional uint32 dot11MeshMaxRetries = 6;
  optional uint32 dot11MeshTTL = 7;
  optional uint32 element_ttl = 8;
  optional uint32 auto_open_plinks = 9;
  optional uint32 dot11MeshNbrOffsetMaxNeighbor = 10;
  optional uint32 dot11MeshHWMPmaxPREQretries = 11;
  optional uint32 path_refresh_time = 12;
  optional uint32 dot11MeshHWMPactivePathTimeout = 13;
  optional uint32 min_discovery_timeout = 14;
  optional uint32 dot11MeshHWMPpreqMinInterval = 15;
  optional uint32 dot11MeshHWMPperrMinInterval = 16;
  optional uint32 dot11MeshHWMPnetDiameterTraversalTime = 17;
  optional uint32 dot11MeshHWMPRootMode = 18;
  optional uint32 dot11MeshHWMPRannInterval = 19;
  optional uint32 dot11MeshGateAnnouncementProtocol = 20;
  optional uint32 dot11MeshForwarding = 21;
  optional int32 rssi_threshold = 22;
  optional uint32 ht_opmode = 23;
  optional uint32 dot11MeshHWMPactivePathToRootTimeout = 24;
  optional uint32 dot11MeshHWMProotInterval = 25;
  optional uint32 dot11MeshHWMPconfirmationInterval = 26;
  optional int32 ret = 27;
  optional uint32 dot11MeshNolearn = 28;
}
message RdevReturnIntMpathInfoFtraceEvent {
  optional string wiphy_name = 1;
  optional int32 ret = 2;
  optional int32 generation = 3;
  optional uint32 filled = 4;
  optional uint32 frame_qlen = 5;
  optional uint32 sn = 6;
  optional uint32 metric = 7;
  optional uint32 exptime = 8;
  optional uint32 discovery_timeout = 9;
  optional uint32 discovery_retries = 10;
  optional uint32 flags = 11;
}
message RdevReturnIntStationInfoFtraceEvent {
  optional string wiphy_name = 1;
  optional int32 ret = 2;
  optional int32 generation = 3;
  optional uint32 connected_time = 4;
  optional uint32 inactive_time = 5;
  optional uint32 rx_bytes = 6;
  optional uint32 tx_bytes = 7;
  optional uint32 rx_packets = 8;
  optional uint32 tx_packets = 9;
  optional uint32 tx_retries = 10;
  optional uint32 tx_failed = 11;
  optional uint32 rx_dropped_misc = 12;
  optional uint32 beacon_loss_count = 13;
  optional uint32 llid = 14;
  optional uint32 plid = 15;
  optional uint32 plink_state = 16;
}
message RdevReturnIntSurveyInfoFtraceEvent {
  optional string wiphy_name = 1;
  optional uint32 band = 2;
  optional uint32 center_freq = 3;
  optional int32 ret = 4;
  optional uint64 channel_time = 5;
  optional uint64 channel_time_busy = 6;
  optional uint64 channel_time_ext_busy = 7;
  optional uint64 channel_time_rx = 8;
  optional uint64 channel_time_tx = 9;
  optional uint32 filled = 10;
  optional int32 noise = 11;
  optional uint32 freq_offset = 12;
  optional uint64 time = 13;
  optional uint64 time_busy = 14;
  optional uint64 time_ext_busy = 15;
  optional uint64 time_rx = 16;
  optional uint64 time_tx = 17;
  optional uint64 time_scan = 18;
}
message RdevReturnIntTxRxFtraceEvent {
  optional string wiphy_name = 1;
  optional int32 ret = 2;
  optional uint32 tx = 3;
  optional uint32 rx = 4;
}
message RdevReturnVoidFtraceEvent {
  optional string wiphy_name = 1;
}
message RdevReturnVoidTxRxFtraceEvent {
  optional string wiphy_name = 1;
  optional uint32 tx = 2;
  optional uint32 tx_max = 3;
  optional uint32 rx = 4;
  optional uint32 rx_max = 5;
}
message RdevReturnWdevFtraceEvent {
  optional string wiphy_name = 1;
  optional uint32 id = 2;
}
message RdevRfkillPollFtraceEvent {
  optional string wiphy_name = 1;
}
message RdevScanFtraceEvent {
  optional string wiphy_name = 1;
}
message RdevSchedScanStartFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint64 id = 4;
}
message RdevSchedScanStopFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint64 id = 4;
}
message RdevSetAntennaFtraceEvent {
  optional string wiphy_name = 1;
  optional uint32 tx = 2;
  optional uint32 rx = 3;
}
message RdevSetApChanwidthFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint32 band = 4;
  optional uint32 control_freq = 5;
  optional uint32 freq_offset = 6;
  optional uint32 width = 7;
  optional uint32 center_freq1 = 8;
  optional uint32 freq1_offset = 9;
  optional uint32 center_freq2 = 10;
  optional uint32 link_id = 11;
}
message RdevSetBitrateMaskFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint64 peer = 4;
  optional uint32 link_id = 5;
}
message RdevSetCoalesceFtraceEvent {
  optional string wiphy_name = 1;
  optional int32 n_rules = 2;
}
message RdevSetCqmRssiConfigFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional int32 rssi_thold = 4;
  optional uint32 rssi_hyst = 5;
}
message RdevSetCqmRssiRangeConfigFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional int32 rssi_low = 4;
  optional int32 rssi_high = 5;
}
message RdevSetCqmTxeConfigFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint32 rate = 4;
  optional uint32 pkts = 5;
  optional uint32 intvl = 6;
}
message RdevSetDefaultBeaconKeyFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint32 key_index = 4;
  optional int32 link_id = 5;
}
message RdevSetDefaultKeyFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint32 key_index = 4;
  optional uint32 unicast = 5;
  optional uint32 multicast = 6;
  optional int32 link_id = 7;
}
message RdevSetDefaultMgmtKeyFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint32 key_index = 4;
  optional int32 link_id = 5;
}
message RdevSetFilsAadFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint64 macaddr = 4;
  optional uint32 kek_len = 5;
}
message RdevSetMacAclFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint32 acl_policy = 4;
}
message RdevSetMcastRateFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
}
message RdevSetMonitorChannelFtraceEvent {
  optional string wiphy_name = 1;
  optional uint32 band = 2;
  optional uint32 control_freq = 3;
  optional uint32 width = 4;
  optional uint32 center_freq1 = 5;
  optional uint32 center_freq2 = 6;
  optional uint32 freq_offset = 7;
  optional uint32 freq1_offset = 8;
}
message RdevSetMulticastToUnicastFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint32 enabled = 4;
}
message RdevSetNoackMapFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint32 noack_map = 4;
}
message RdevSetPmkFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint64 aa = 4;
  optional uint32 pmk_len = 5;
  optional uint32 pmk_r0_name_len = 6;
  optional uint32 pmk = 7;
  optional uint32 pmk_r0_name = 8;
}
message RdevSetPmksaFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint64 bssid = 4;
}
message RdevSetPowerMgmtFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint32 enabled = 4;
  optional int32 timeout = 5;
}
message RdevSetQosMapFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint32 num_des = 4;
}
message RdevSetRadarBackgroundFtraceEvent {
  optional string wiphy_name = 1;
  optional uint32 band = 2;
  optional uint32 control_freq = 3;
  optional uint32 freq_offset = 4;
  optional uint32 width = 5;
  optional uint32 center_freq1 = 6;
  optional uint32 freq1_offset = 7;
  optional uint32 center_freq2 = 8;
}
message RdevSetRekeyDataFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
}
message RdevSetSarSpecsFtraceEvent {
  optional string wiphy_name = 1;
  optional uint32 type = 2;
  optional uint32 num = 3;
}
message RdevSetTidConfigFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint64 peer = 4;
}
message RdevSetTxPowerFtraceEvent {
  optional string wiphy_name = 1;
  optional uint32 id = 2;
  optional uint32 type = 3;
  optional int32 mbm = 4;
}
message RdevSetTxqParamsFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint32 ac = 4;
  optional uint32 txop = 5;
  optional uint32 cwmin = 6;
  optional uint32 cwmax = 7;
  optional uint32 aifs = 8;
}
message RdevSetWakeupFtraceEvent {
  optional string wiphy_name = 1;
  optional uint32 enabled = 2;
}
message RdevSetWiphyParamsFtraceEvent {
  optional string wiphy_name = 1;
  optional uint32 changed = 2;
}
message RdevStartApFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint32 band = 4;
  optional uint32 control_freq = 5;
  optional uint32 width = 6;
  optional uint32 center_freq1 = 7;
  optional uint32 center_freq2 = 8;
  optional int32 beacon_interval = 9;
  optional int32 dtim_period = 10;
  optional uint32 hidden_ssid = 11;
  optional uint32 wpa_ver = 12;
  optional uint32 privacy = 13;
  optional uint32 auth_type = 14;
  optional int32 inactivity_timeout = 15;
  optional uint32 freq_offset = 16;
  optional uint32 freq1_offset = 17;
  optional string ssid = 18;
  optional uint32 link_id = 19;
}
message RdevStartNanFtraceEvent {
  optional string wiphy_name = 1;
  optional uint32 id = 2;
  optional uint32 master_pref = 3;
  optional uint32 bands = 4;
}
message RdevStartP2pDeviceFtraceEvent {
  optional string wiphy_name = 1;
  optional uint32 id = 2;
}
message RdevStartPmsrFtraceEvent {
  optional string wiphy_name = 1;
  optional uint32 id = 2;
  optional uint64 cookie = 3;
}
message RdevStartRadarDetectionFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint32 band = 4;
  optional uint32 control_freq = 5;
  optional uint32 freq_offset = 6;
  optional uint32 width = 7;
  optional uint32 center_freq1 = 8;
  optional uint32 freq1_offset = 9;
  optional uint32 center_freq2 = 10;
  optional uint32 cac_time_ms = 11;
}
message RdevStopApFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint32 link_id = 4;
}
message RdevStopNanFtraceEvent {
  optional string wiphy_name = 1;
  optional uint32 id = 2;
}
message RdevStopP2pDeviceFtraceEvent {
  optional string wiphy_name = 1;
  optional uint32 id = 2;
}
message RdevSuspendFtraceEvent {
  optional string wiphy_name = 1;
  optional uint32 any = 2;
  optional uint32 disconnect = 3;
  optional uint32 magic_pkt = 4;
  optional uint32 gtk_rekey_failure = 5;
  optional uint32 eap_identity_req = 6;
  optional uint32 four_way_handshake = 7;
  optional uint32 rfkill_release = 8;
  optional uint32 valid_wow = 9;
}
message RdevTdlsCancelChannelSwitchFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint64 addr = 4;
}
message RdevTdlsChannelSwitchFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint64 addr = 4;
  optional uint32 oper_class = 5;
  optional uint32 band = 6;
  optional uint32 control_freq = 7;
  optional uint32 freq_offset = 8;
  optional uint32 width = 9;
  optional uint32 center_freq1 = 10;
  optional uint32 freq1_offset = 11;
  optional uint32 center_freq2 = 12;
}
message RdevTdlsMgmtFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint64 peer = 4;
  optional uint32 action_code = 5;
  optional uint32 dialog_token = 6;
  optional uint32 status_code = 7;
  optional uint32 buf = 8;
  optional uint32 peer_capability = 9;
  optional uint32 initiator = 10;
}
message RdevTdlsOperFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint64 peer = 4;
  optional uint32 oper = 5;
}
message RdevTxControlPortFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint64 dest = 4;
  optional uint32 proto = 5;
  optional uint32 unencrypted = 6;
  optional int32 link_id = 7;
}
message RdevUpdateConnectParamsFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint32 changed = 4;
}
message RdevUpdateFtIesFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint32 md = 4;
  optional uint32 ie = 5;
}
message RdevUpdateMeshConfigFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint32 dot11MeshRetryTimeout = 4;
  optional uint32 dot11MeshConfirmTimeout = 5;
  optional uint32 dot11MeshHoldingTimeout = 6;
  optional uint32 dot11MeshMaxPeerLinks = 7;
  optional uint32 dot11MeshMaxRetries = 8;
  optional uint32 dot11MeshTTL = 9;
  optional uint32 element_ttl = 10;
  optional uint32 auto_open_plinks = 11;
  optional uint32 dot11MeshNbrOffsetMaxNeighbor = 12;
  optional uint32 dot11MeshHWMPmaxPREQretries = 13;
  optional uint32 path_refresh_time = 14;
  optional uint32 dot11MeshHWMPactivePathTimeout = 15;
  optional uint32 min_discovery_timeout = 16;
  optional uint32 dot11MeshHWMPpreqMinInterval = 17;
  optional uint32 dot11MeshHWMPperrMinInterval = 18;
  optional uint32 dot11MeshHWMPnetDiameterTraversalTime = 19;
  optional uint32 dot11MeshHWMPRootMode = 20;
  optional uint32 dot11MeshHWMPRannInterval = 21;
  optional uint32 dot11MeshGateAnnouncementProtocol = 22;
  optional uint32 dot11MeshForwarding = 23;
  optional int32 rssi_threshold = 24;
  optional uint32 ht_opmode = 25;
  optional uint32 dot11MeshHWMPactivePathToRootTimeout = 26;
  optional uint32 dot11MeshHWMProotInterval = 27;
  optional uint32 dot11MeshHWMPconfirmationInterval = 28;
  optional uint32 mask = 29;
  optional uint32 dot11MeshNolearn = 30;
}
message RdevUpdateMgmtFrameRegistrationsFtraceEvent {
  optional string wiphy_name = 1;
  optional uint32 id = 2;
  optional uint32 global_stypes = 3;
  optional uint32 interface_stypes = 4;
}
message RdevUpdateOweInfoFtraceEvent {
  optional string wiphy_name = 1;
  optional string name = 2;
  optional int32 ifindex = 3;
  optional uint64 peer = 4;
  optional uint32 status = 5;
  optional uint32 ie = 6;
}
