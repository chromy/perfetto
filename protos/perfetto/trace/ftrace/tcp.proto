// Autogenerated by:
// ../../src/tools/ftrace_proto_gen/ftrace_proto_gen.cc
// Do not edit.

syntax = "proto2";
package perfetto.protos;

message TcpRetransmitSkbFtraceEvent {
  optional uint32 daddr = 1;
  optional uint32 dport = 2;
  optional uint32 saddr = 3;
  optional uint64 skaddr = 4;
  optional uint64 skbaddr = 5;
  optional uint32 sport = 6;
  optional int32 state = 7;
  optional uint32 family = 8;
}
message TcpBadCsumFtraceEvent {
  optional uint64 skbaddr = 1;
}
message TcpCongStateSetFtraceEvent {
  optional uint64 skaddr = 1;
  optional uint32 sport = 2;
  optional uint32 dport = 3;
  optional uint32 family = 4;
  optional uint32 saddr = 5;
  optional uint32 daddr = 6;
  optional uint32 cong_state = 7;
}
message TcpDestroySockFtraceEvent {
  optional uint64 skaddr = 1;
  optional uint32 sport = 2;
  optional uint32 dport = 3;
  optional uint32 saddr = 4;
  optional uint32 daddr = 5;
  optional uint64 sock_cookie = 6;
  optional uint32 family = 7;
}
message TcpProbeFtraceEvent {
  optional uint32 sport = 1;
  optional uint32 dport = 2;
  optional uint32 mark = 3;
  optional uint32 data_len = 4;
  optional uint32 snd_nxt = 5;
  optional uint32 snd_una = 6;
  optional uint32 snd_cwnd = 7;
  optional uint32 ssthresh = 8;
  optional uint32 snd_wnd = 9;
  optional uint32 srtt = 10;
  optional uint32 rcv_wnd = 11;
  optional uint64 sock_cookie = 12;
  optional uint32 family = 13;
}
message TcpRcvSpaceAdjustFtraceEvent {
  optional uint64 skaddr = 1;
  optional uint32 sport = 2;
  optional uint32 dport = 3;
  optional uint32 saddr = 4;
  optional uint32 daddr = 5;
  optional uint64 sock_cookie = 6;
  optional uint32 family = 7;
}
message TcpReceiveResetFtraceEvent {
  optional uint64 skaddr = 1;
  optional uint32 sport = 2;
  optional uint32 dport = 3;
  optional uint32 saddr = 4;
  optional uint32 daddr = 5;
  optional uint64 sock_cookie = 6;
  optional uint32 family = 7;
}
message TcpRetransmitSynackFtraceEvent {
  optional uint64 skaddr = 1;
  optional uint64 req = 2;
  optional uint32 sport = 3;
  optional uint32 dport = 4;
  optional uint32 saddr = 5;
  optional uint32 daddr = 6;
  optional uint32 family = 7;
}
message TcpSendResetFtraceEvent {
  optional uint64 skbaddr = 1;
  optional uint64 skaddr = 2;
  optional int32 state = 3;
  optional uint32 sport = 4;
  optional uint32 dport = 5;
  optional uint32 saddr = 6;
  optional uint32 daddr = 7;
  optional uint32 family = 8;
}
