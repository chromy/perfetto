// Autogenerated by:
// ../../src/tools/ftrace_proto_gen/ftrace_proto_gen.cc
// Do not edit.

syntax = "proto2";
package perfetto.protos;

message RcuBarrierFtraceEvent {
  optional string rcuname = 1;
  optional string s = 2;
  optional int32 cpu = 3;
  optional int32 cnt = 4;
  optional uint64 done = 5;
}
message RcuBatchEndFtraceEvent {
  optional string rcuname = 1;
  optional int32 callbacks_invoked = 2;
  optional uint32 cb = 3;
  optional uint32 nr = 4;
  optional uint32 iit = 5;
  optional uint32 risk = 6;
}
message RcuBatchStartFtraceEvent {
  optional string rcuname = 1;
  optional int64 qlen = 2;
  optional int64 blimit = 3;
}
message RcuCallbackFtraceEvent {
  optional string rcuname = 1;
  optional uint64 rhp = 2;
  optional uint64 func = 3;
  optional int64 qlen = 4;
}
message RcuDyntickFtraceEvent {
  optional string polarity = 1;
  optional int64 oldnesting = 2;
  optional int64 newnesting = 3;
  optional int32 dynticks = 4;
}
message RcuExpFunnelLockFtraceEvent {
  optional string rcuname = 1;
  optional uint32 level = 2;
  optional int32 grplo = 3;
  optional int32 grphi = 4;
  optional string gpevent = 5;
}
message RcuExpGracePeriodFtraceEvent {
  optional string rcuname = 1;
  optional int64 gpseq = 2;
  optional string gpevent = 3;
}
message RcuFqsFtraceEvent {
  optional string rcuname = 1;
  optional int64 gp_seq = 2;
  optional int32 cpu = 3;
  optional string qsevent = 4;
}
message RcuFutureGracePeriodFtraceEvent {
  optional string rcuname = 1;
  optional int64 gp_seq = 2;
  optional int64 gp_seq_req = 3;
  optional uint32 level = 4;
  optional int32 grplo = 5;
  optional int32 grphi = 6;
  optional string gpevent = 7;
}
message RcuGracePeriodFtraceEvent {
  optional string rcuname = 1;
  optional int64 gp_seq = 2;
  optional string gpevent = 3;
}
message RcuGracePeriodInitFtraceEvent {
  optional string rcuname = 1;
  optional int64 gp_seq = 2;
  optional uint32 level = 3;
  optional int32 grplo = 4;
  optional int32 grphi = 5;
  optional uint64 qsmask = 6;
}
message RcuInvokeCallbackFtraceEvent {
  optional string rcuname = 1;
  optional uint64 rhp = 2;
  optional uint64 func = 3;
}
message RcuInvokeKfreeBulkCallbackFtraceEvent {
  optional string rcuname = 1;
  optional uint64 nr_records = 2;
  optional uint64 p = 3;
}
message RcuInvokeKvfreeCallbackFtraceEvent {
  optional string rcuname = 1;
  optional uint64 rhp = 2;
  optional uint64 offset = 3;
}
message RcuKvfreeCallbackFtraceEvent {
  optional string rcuname = 1;
  optional uint64 rhp = 2;
  optional uint64 offset = 3;
  optional int64 qlen = 4;
}
message RcuPreemptTaskFtraceEvent {
  optional string rcuname = 1;
  optional int64 gp_seq = 2;
  optional int32 pid = 3;
}
message RcuQuiescentStateReportFtraceEvent {
  optional string rcuname = 1;
  optional int64 gp_seq = 2;
  optional uint64 mask = 3;
  optional uint64 qsmask = 4;
  optional uint32 level = 5;
  optional int32 grplo = 6;
  optional int32 grphi = 7;
  optional uint32 gp_tasks = 8;
}
message RcuSegcbStatsFtraceEvent {
  optional string ctx = 1;
}
message RcuStallWarningFtraceEvent {
  optional string rcuname = 1;
  optional string msg = 2;
}
message RcuTortureReadFtraceEvent {
  optional string rcutorturename = 1;
  optional uint64 rhp = 2;
  optional uint64 secs = 3;
  optional uint64 c_old = 4;
  optional uint64 c = 5;
}
message RcuUnlockPreemptedTaskFtraceEvent {
  optional string rcuname = 1;
  optional int64 gp_seq = 2;
  optional int32 pid = 3;
}
message RcuUtilizationFtraceEvent {
  optional string s = 1;
}
