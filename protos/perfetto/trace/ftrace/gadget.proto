// Autogenerated by:
// ../../src/tools/ftrace_proto_gen/ftrace_proto_gen.cc
// Do not edit.

syntax = "proto2";
package perfetto.protos;

message UsbEpAllocRequestFtraceEvent {
  optional string name = 1;
  optional uint32 length = 2;
  optional uint32 actual = 3;
  optional uint32 num_sgs = 4;
  optional uint32 num_mapped_sgs = 5;
  optional uint32 stream_id = 6;
  optional uint32 no_interrupt = 7;
  optional uint32 zero = 8;
  optional uint32 short_not_ok = 9;
  optional int32 status = 10;
  optional int32 ret = 11;
  optional uint64 req = 12;
}
message UsbEpClearHaltFtraceEvent {
  optional string name = 1;
  optional uint32 maxpacket = 2;
  optional uint32 maxpacket_limit = 3;
  optional uint32 max_streams = 4;
  optional uint32 mult = 5;
  optional uint32 maxburst = 6;
  optional uint32 address = 7;
  optional uint32 claimed = 8;
  optional uint32 enabled = 9;
  optional int32 ret = 10;
}
message UsbEpDequeueFtraceEvent {
  optional string name = 1;
  optional uint32 length = 2;
  optional uint32 actual = 3;
  optional uint32 num_sgs = 4;
  optional uint32 num_mapped_sgs = 5;
  optional uint32 stream_id = 6;
  optional uint32 no_interrupt = 7;
  optional uint32 zero = 8;
  optional uint32 short_not_ok = 9;
  optional int32 status = 10;
  optional int32 ret = 11;
  optional uint64 req = 12;
}
message UsbEpDisableFtraceEvent {
  optional string name = 1;
  optional uint32 maxpacket = 2;
  optional uint32 maxpacket_limit = 3;
  optional uint32 max_streams = 4;
  optional uint32 mult = 5;
  optional uint32 maxburst = 6;
  optional uint32 address = 7;
  optional uint32 claimed = 8;
  optional uint32 enabled = 9;
  optional int32 ret = 10;
}
message UsbEpEnableFtraceEvent {
  optional string name = 1;
  optional uint32 maxpacket = 2;
  optional uint32 maxpacket_limit = 3;
  optional uint32 max_streams = 4;
  optional uint32 mult = 5;
  optional uint32 maxburst = 6;
  optional uint32 address = 7;
  optional uint32 claimed = 8;
  optional uint32 enabled = 9;
  optional int32 ret = 10;
}
message UsbEpFifoFlushFtraceEvent {
  optional string name = 1;
  optional uint32 maxpacket = 2;
  optional uint32 maxpacket_limit = 3;
  optional uint32 max_streams = 4;
  optional uint32 mult = 5;
  optional uint32 maxburst = 6;
  optional uint32 address = 7;
  optional uint32 claimed = 8;
  optional uint32 enabled = 9;
  optional int32 ret = 10;
}
message UsbEpFifoStatusFtraceEvent {
  optional string name = 1;
  optional uint32 maxpacket = 2;
  optional uint32 maxpacket_limit = 3;
  optional uint32 max_streams = 4;
  optional uint32 mult = 5;
  optional uint32 maxburst = 6;
  optional uint32 address = 7;
  optional uint32 claimed = 8;
  optional uint32 enabled = 9;
  optional int32 ret = 10;
}
message UsbEpFreeRequestFtraceEvent {
  optional string name = 1;
  optional uint32 length = 2;
  optional uint32 actual = 3;
  optional uint32 num_sgs = 4;
  optional uint32 num_mapped_sgs = 5;
  optional uint32 stream_id = 6;
  optional uint32 no_interrupt = 7;
  optional uint32 zero = 8;
  optional uint32 short_not_ok = 9;
  optional int32 status = 10;
  optional int32 ret = 11;
  optional uint64 req = 12;
}
message UsbEpQueueFtraceEvent {
  optional string name = 1;
  optional uint32 length = 2;
  optional uint32 actual = 3;
  optional uint32 num_sgs = 4;
  optional uint32 num_mapped_sgs = 5;
  optional uint32 stream_id = 6;
  optional uint32 no_interrupt = 7;
  optional uint32 zero = 8;
  optional uint32 short_not_ok = 9;
  optional int32 status = 10;
  optional int32 ret = 11;
  optional uint64 req = 12;
}
message UsbEpSetHaltFtraceEvent {
  optional string name = 1;
  optional uint32 maxpacket = 2;
  optional uint32 maxpacket_limit = 3;
  optional uint32 max_streams = 4;
  optional uint32 mult = 5;
  optional uint32 maxburst = 6;
  optional uint32 address = 7;
  optional uint32 claimed = 8;
  optional uint32 enabled = 9;
  optional int32 ret = 10;
}
message UsbEpSetMaxpacketLimitFtraceEvent {
  optional string name = 1;
  optional uint32 maxpacket = 2;
  optional uint32 maxpacket_limit = 3;
  optional uint32 max_streams = 4;
  optional uint32 mult = 5;
  optional uint32 maxburst = 6;
  optional uint32 address = 7;
  optional uint32 claimed = 8;
  optional uint32 enabled = 9;
  optional int32 ret = 10;
}
message UsbEpSetWedgeFtraceEvent {
  optional string name = 1;
  optional uint32 maxpacket = 2;
  optional uint32 maxpacket_limit = 3;
  optional uint32 max_streams = 4;
  optional uint32 mult = 5;
  optional uint32 maxburst = 6;
  optional uint32 address = 7;
  optional uint32 claimed = 8;
  optional uint32 enabled = 9;
  optional int32 ret = 10;
}
message UsbGadgetActivateFtraceEvent {
  optional uint32 speed = 1;
  optional uint32 max_speed = 2;
  optional uint32 state = 3;
  optional uint32 mA = 4;
  optional uint32 sg_supported = 5;
  optional uint32 is_otg = 6;
  optional uint32 is_a_peripheral = 7;
  optional uint32 b_hnp_enable = 8;
  optional uint32 a_hnp_support = 9;
  optional uint32 hnp_polling_support = 10;
  optional uint32 host_request_flag = 11;
  optional uint32 quirk_ep_out_aligned_size = 12;
  optional uint32 quirk_altset_not_supp = 13;
  optional uint32 quirk_stall_not_supp = 14;
  optional uint32 quirk_zlp_not_supp = 15;
  optional uint32 is_selfpowered = 16;
  optional uint32 deactivated = 17;
  optional uint32 connected = 18;
  optional int32 ret = 19;
}
message UsbGadgetClearSelfpoweredFtraceEvent {
  optional uint32 speed = 1;
  optional uint32 max_speed = 2;
  optional uint32 state = 3;
  optional uint32 mA = 4;
  optional uint32 sg_supported = 5;
  optional uint32 is_otg = 6;
  optional uint32 is_a_peripheral = 7;
  optional uint32 b_hnp_enable = 8;
  optional uint32 a_hnp_support = 9;
  optional uint32 hnp_polling_support = 10;
  optional uint32 host_request_flag = 11;
  optional uint32 quirk_ep_out_aligned_size = 12;
  optional uint32 quirk_altset_not_supp = 13;
  optional uint32 quirk_stall_not_supp = 14;
  optional uint32 quirk_zlp_not_supp = 15;
  optional uint32 is_selfpowered = 16;
  optional uint32 deactivated = 17;
  optional uint32 connected = 18;
  optional int32 ret = 19;
}
message UsbGadgetConnectFtraceEvent {
  optional uint32 speed = 1;
  optional uint32 max_speed = 2;
  optional uint32 state = 3;
  optional uint32 mA = 4;
  optional uint32 sg_supported = 5;
  optional uint32 is_otg = 6;
  optional uint32 is_a_peripheral = 7;
  optional uint32 b_hnp_enable = 8;
  optional uint32 a_hnp_support = 9;
  optional uint32 hnp_polling_support = 10;
  optional uint32 host_request_flag = 11;
  optional uint32 quirk_ep_out_aligned_size = 12;
  optional uint32 quirk_altset_not_supp = 13;
  optional uint32 quirk_stall_not_supp = 14;
  optional uint32 quirk_zlp_not_supp = 15;
  optional uint32 is_selfpowered = 16;
  optional uint32 deactivated = 17;
  optional uint32 connected = 18;
  optional int32 ret = 19;
}
message UsbGadgetDeactivateFtraceEvent {
  optional uint32 speed = 1;
  optional uint32 max_speed = 2;
  optional uint32 state = 3;
  optional uint32 mA = 4;
  optional uint32 sg_supported = 5;
  optional uint32 is_otg = 6;
  optional uint32 is_a_peripheral = 7;
  optional uint32 b_hnp_enable = 8;
  optional uint32 a_hnp_support = 9;
  optional uint32 hnp_polling_support = 10;
  optional uint32 host_request_flag = 11;
  optional uint32 quirk_ep_out_aligned_size = 12;
  optional uint32 quirk_altset_not_supp = 13;
  optional uint32 quirk_stall_not_supp = 14;
  optional uint32 quirk_zlp_not_supp = 15;
  optional uint32 is_selfpowered = 16;
  optional uint32 deactivated = 17;
  optional uint32 connected = 18;
  optional int32 ret = 19;
}
message UsbGadgetDisconnectFtraceEvent {
  optional uint32 speed = 1;
  optional uint32 max_speed = 2;
  optional uint32 state = 3;
  optional uint32 mA = 4;
  optional uint32 sg_supported = 5;
  optional uint32 is_otg = 6;
  optional uint32 is_a_peripheral = 7;
  optional uint32 b_hnp_enable = 8;
  optional uint32 a_hnp_support = 9;
  optional uint32 hnp_polling_support = 10;
  optional uint32 host_request_flag = 11;
  optional uint32 quirk_ep_out_aligned_size = 12;
  optional uint32 quirk_altset_not_supp = 13;
  optional uint32 quirk_stall_not_supp = 14;
  optional uint32 quirk_zlp_not_supp = 15;
  optional uint32 is_selfpowered = 16;
  optional uint32 deactivated = 17;
  optional uint32 connected = 18;
  optional int32 ret = 19;
}
message UsbGadgetFrameNumberFtraceEvent {
  optional uint32 speed = 1;
  optional uint32 max_speed = 2;
  optional uint32 state = 3;
  optional uint32 mA = 4;
  optional uint32 sg_supported = 5;
  optional uint32 is_otg = 6;
  optional uint32 is_a_peripheral = 7;
  optional uint32 b_hnp_enable = 8;
  optional uint32 a_hnp_support = 9;
  optional uint32 hnp_polling_support = 10;
  optional uint32 host_request_flag = 11;
  optional uint32 quirk_ep_out_aligned_size = 12;
  optional uint32 quirk_altset_not_supp = 13;
  optional uint32 quirk_stall_not_supp = 14;
  optional uint32 quirk_zlp_not_supp = 15;
  optional uint32 is_selfpowered = 16;
  optional uint32 deactivated = 17;
  optional uint32 connected = 18;
  optional int32 ret = 19;
}
message UsbGadgetGivebackRequestFtraceEvent {
  optional string name = 1;
  optional uint32 length = 2;
  optional uint32 actual = 3;
  optional uint32 num_sgs = 4;
  optional uint32 num_mapped_sgs = 5;
  optional uint32 stream_id = 6;
  optional uint32 no_interrupt = 7;
  optional uint32 zero = 8;
  optional uint32 short_not_ok = 9;
  optional int32 status = 10;
  optional int32 ret = 11;
  optional uint64 req = 12;
}
message UsbGadgetSetSelfpoweredFtraceEvent {
  optional uint32 speed = 1;
  optional uint32 max_speed = 2;
  optional uint32 state = 3;
  optional uint32 mA = 4;
  optional uint32 sg_supported = 5;
  optional uint32 is_otg = 6;
  optional uint32 is_a_peripheral = 7;
  optional uint32 b_hnp_enable = 8;
  optional uint32 a_hnp_support = 9;
  optional uint32 hnp_polling_support = 10;
  optional uint32 host_request_flag = 11;
  optional uint32 quirk_ep_out_aligned_size = 12;
  optional uint32 quirk_altset_not_supp = 13;
  optional uint32 quirk_stall_not_supp = 14;
  optional uint32 quirk_zlp_not_supp = 15;
  optional uint32 is_selfpowered = 16;
  optional uint32 deactivated = 17;
  optional uint32 connected = 18;
  optional int32 ret = 19;
}
message UsbGadgetVbusConnectFtraceEvent {
  optional uint32 speed = 1;
  optional uint32 max_speed = 2;
  optional uint32 state = 3;
  optional uint32 mA = 4;
  optional uint32 sg_supported = 5;
  optional uint32 is_otg = 6;
  optional uint32 is_a_peripheral = 7;
  optional uint32 b_hnp_enable = 8;
  optional uint32 a_hnp_support = 9;
  optional uint32 hnp_polling_support = 10;
  optional uint32 host_request_flag = 11;
  optional uint32 quirk_ep_out_aligned_size = 12;
  optional uint32 quirk_altset_not_supp = 13;
  optional uint32 quirk_stall_not_supp = 14;
  optional uint32 quirk_zlp_not_supp = 15;
  optional uint32 is_selfpowered = 16;
  optional uint32 deactivated = 17;
  optional uint32 connected = 18;
  optional int32 ret = 19;
}
message UsbGadgetVbusDisconnectFtraceEvent {
  optional uint32 speed = 1;
  optional uint32 max_speed = 2;
  optional uint32 state = 3;
  optional uint32 mA = 4;
  optional uint32 sg_supported = 5;
  optional uint32 is_otg = 6;
  optional uint32 is_a_peripheral = 7;
  optional uint32 b_hnp_enable = 8;
  optional uint32 a_hnp_support = 9;
  optional uint32 hnp_polling_support = 10;
  optional uint32 host_request_flag = 11;
  optional uint32 quirk_ep_out_aligned_size = 12;
  optional uint32 quirk_altset_not_supp = 13;
  optional uint32 quirk_stall_not_supp = 14;
  optional uint32 quirk_zlp_not_supp = 15;
  optional uint32 is_selfpowered = 16;
  optional uint32 deactivated = 17;
  optional uint32 connected = 18;
  optional int32 ret = 19;
}
message UsbGadgetVbusDrawFtraceEvent {
  optional uint32 speed = 1;
  optional uint32 max_speed = 2;
  optional uint32 state = 3;
  optional uint32 mA = 4;
  optional uint32 sg_supported = 5;
  optional uint32 is_otg = 6;
  optional uint32 is_a_peripheral = 7;
  optional uint32 b_hnp_enable = 8;
  optional uint32 a_hnp_support = 9;
  optional uint32 hnp_polling_support = 10;
  optional uint32 host_request_flag = 11;
  optional uint32 quirk_ep_out_aligned_size = 12;
  optional uint32 quirk_altset_not_supp = 13;
  optional uint32 quirk_stall_not_supp = 14;
  optional uint32 quirk_zlp_not_supp = 15;
  optional uint32 is_selfpowered = 16;
  optional uint32 deactivated = 17;
  optional uint32 connected = 18;
  optional int32 ret = 19;
}
message UsbGadgetWakeupFtraceEvent {
  optional uint32 speed = 1;
  optional uint32 max_speed = 2;
  optional uint32 state = 3;
  optional uint32 mA = 4;
  optional uint32 sg_supported = 5;
  optional uint32 is_otg = 6;
  optional uint32 is_a_peripheral = 7;
  optional uint32 b_hnp_enable = 8;
  optional uint32 a_hnp_support = 9;
  optional uint32 hnp_polling_support = 10;
  optional uint32 host_request_flag = 11;
  optional uint32 quirk_ep_out_aligned_size = 12;
  optional uint32 quirk_altset_not_supp = 13;
  optional uint32 quirk_stall_not_supp = 14;
  optional uint32 quirk_zlp_not_supp = 15;
  optional uint32 is_selfpowered = 16;
  optional uint32 deactivated = 17;
  optional uint32 connected = 18;
  optional int32 ret = 19;
}
