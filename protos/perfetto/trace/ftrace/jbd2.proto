// Autogenerated by:
// ../../src/tools/ftrace_proto_gen/ftrace_proto_gen.cc
// Do not edit.

syntax = "proto2";
package perfetto.protos;

message Jbd2CheckpointFtraceEvent {
  optional uint64 dev = 1;
  optional int32 result = 2;
}
message Jbd2CheckpointStatsFtraceEvent {
  optional uint64 dev = 1;
  optional uint64 tid = 2;
  optional uint64 chp_time = 3;
  optional uint32 forced_to_close = 4;
  optional uint32 written = 5;
  optional uint32 dropped = 6;
}
message Jbd2CommitFlushingFtraceEvent {
  optional uint64 dev = 1;
  optional uint32 sync_commit = 2;
  optional int64 transaction = 3;
}
message Jbd2CommitLockingFtraceEvent {
  optional uint64 dev = 1;
  optional uint32 sync_commit = 2;
  optional int64 transaction = 3;
}
message Jbd2CommitLoggingFtraceEvent {
  optional uint64 dev = 1;
  optional uint32 sync_commit = 2;
  optional int64 transaction = 3;
}
message Jbd2DropTransactionFtraceEvent {
  optional uint64 dev = 1;
  optional uint32 sync_commit = 2;
  optional int64 transaction = 3;
}
message Jbd2EndCommitFtraceEvent {
  optional uint64 dev = 1;
  optional uint32 sync_commit = 2;
  optional int64 transaction = 3;
  optional int64 head = 4;
}
message Jbd2HandleExtendFtraceEvent {
  optional uint64 dev = 1;
  optional uint64 tid = 2;
  optional uint32 type = 3;
  optional uint32 line_no = 4;
  optional int32 buffer_credits = 5;
  optional int32 requested_blocks = 6;
}
message Jbd2HandleRestartFtraceEvent {
  optional uint64 dev = 1;
  optional uint64 tid = 2;
  optional uint32 type = 3;
  optional uint32 line_no = 4;
  optional int32 requested_blocks = 5;
}
message Jbd2HandleStartFtraceEvent {
  optional uint64 dev = 1;
  optional uint64 tid = 2;
  optional uint32 type = 3;
  optional uint32 line_no = 4;
  optional int32 requested_blocks = 5;
}
message Jbd2HandleStatsFtraceEvent {
  optional uint64 dev = 1;
  optional uint64 tid = 2;
  optional uint32 type = 3;
  optional uint32 line_no = 4;
  optional int32 interval = 5;
  optional int32 sync = 6;
  optional int32 requested_blocks = 7;
  optional int32 dirtied_blocks = 8;
}
message Jbd2LockBufferStallFtraceEvent {
  optional uint64 dev = 1;
  optional uint64 stall_ms = 2;
}
message Jbd2RunStatsFtraceEvent {
  optional uint64 dev = 1;
  optional uint64 tid = 2;
  optional uint64 wait = 3;
  optional uint64 request_delay = 4;
  optional uint64 running = 5;
  optional uint64 locked = 6;
  optional uint64 flushing = 7;
  optional uint64 logging = 8;
  optional uint32 handle_count = 9;
  optional uint32 blocks = 10;
  optional uint32 blocks_logged = 11;
}
message Jbd2ShrinkCheckpointListFtraceEvent {
  optional uint64 dev = 1;
  optional uint32 first_tid = 2;
  optional uint32 tid = 3;
  optional uint32 last_tid = 4;
  optional uint64 nr_freed = 5;
  optional uint32 next_tid = 6;
}
message Jbd2ShrinkCountFtraceEvent {
  optional uint64 dev = 1;
  optional uint64 nr_to_scan = 2;
  optional uint64 count = 3;
}
message Jbd2ShrinkScanEnterFtraceEvent {
  optional uint64 dev = 1;
  optional uint64 nr_to_scan = 2;
  optional uint64 count = 3;
}
message Jbd2ShrinkScanExitFtraceEvent {
  optional uint64 dev = 1;
  optional uint64 nr_to_scan = 2;
  optional uint64 nr_shrunk = 3;
  optional uint64 count = 4;
}
message Jbd2StartCommitFtraceEvent {
  optional uint64 dev = 1;
  optional uint32 sync_commit = 2;
  optional int64 transaction = 3;
}
message Jbd2SubmitInodeDataFtraceEvent {
  optional uint64 dev = 1;
  optional uint64 ino = 2;
}
message Jbd2UpdateLogTailFtraceEvent {
  optional uint64 dev = 1;
  optional uint32 tail_sequence = 2;
  optional uint32 first_tid = 3;
  optional uint64 block_nr = 4;
  optional uint64 freed = 5;
}
message Jbd2WriteSuperblockFtraceEvent {
  optional uint64 dev = 1;
  optional int32 write_op = 2;
  optional uint32 write_flags = 3;
}
