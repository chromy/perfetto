// Autogenerated by:
// ../../src/tools/ftrace_proto_gen/ftrace_proto_gen.cc
// Do not edit.

syntax = "proto2";
package perfetto.protos;

message IoUringCompleteFtraceEvent {
  optional uint64 ctx = 1;
  optional uint64 user_data = 2;
  optional int64 res = 3;
  optional uint64 req = 4;
  optional uint32 cflags = 5;
  optional uint64 extra1 = 6;
  optional uint64 extra2 = 7;
}
message IoUringCqeOverflowFtraceEvent {
  optional uint64 ctx = 1;
  optional uint64 user_data = 2;
  optional int32 res = 3;
  optional uint32 cflags = 4;
  optional uint64 ocqe = 5;
}
message IoUringCqringWaitFtraceEvent {
  optional uint64 ctx = 1;
  optional int32 min_events = 2;
}
message IoUringCreateFtraceEvent {
  optional int32 fd = 1;
  optional uint64 ctx = 2;
  optional uint32 sq_entries = 3;
  optional uint32 cq_entries = 4;
  optional uint32 flags = 5;
}
message IoUringDeferFtraceEvent {
  optional uint64 ctx = 1;
  optional uint64 req = 2;
  optional uint64 data = 3;
  optional uint32 opcode = 4;
  optional string op_str = 5;
}
message IoUringFailLinkFtraceEvent {
  optional uint64 req = 1;
  optional uint64 link = 2;
  optional uint64 ctx = 3;
  optional uint64 user_data = 4;
  optional uint32 opcode = 5;
  optional string op_str = 6;
}
message IoUringFileGetFtraceEvent {
  optional uint64 ctx = 1;
  optional int32 fd = 2;
  optional uint64 req = 3;
  optional uint64 user_data = 4;
}
message IoUringLinkFtraceEvent {
  optional uint64 ctx = 1;
  optional uint64 req = 2;
  optional uint64 target_req = 3;
}
message IoUringLocalWorkRunFtraceEvent {
  optional uint64 ctx = 1;
  optional int32 count = 2;
  optional uint32 loops = 3;
}
message IoUringPollArmFtraceEvent {
  optional uint64 ctx = 1;
  optional uint32 opcode = 2;
  optional uint64 user_data = 3;
  optional int32 mask = 4;
  optional int32 events = 5;
  optional uint64 req = 6;
  optional string op_str = 7;
}
message IoUringQueueAsyncWorkFtraceEvent {
  optional uint64 ctx = 1;
  optional int32 rw = 2;
  optional uint64 req = 3;
  optional uint64 work = 4;
  optional uint32 flags = 5;
  optional uint64 user_data = 6;
  optional uint32 opcode = 7;
  optional string op_str = 8;
}
message IoUringRegisterFtraceEvent {
  optional uint64 ctx = 1;
  optional uint32 opcode = 2;
  optional uint32 nr_files = 3;
  optional uint32 nr_bufs = 4;
  optional uint32 eventfd = 5;
  optional int64 ret = 6;
}
message IoUringReqFailedFtraceEvent {
  optional uint64 ctx = 1;
  optional uint64 req = 2;
  optional uint64 user_data = 3;
  optional uint32 opcode = 4;
  optional uint32 flags = 5;
  optional uint32 ioprio = 6;
  optional uint64 off = 7;
  optional uint64 addr = 8;
  optional uint32 len = 9;
  optional uint32 op_flags = 10;
  optional uint32 buf_index = 11;
  optional uint32 personality = 12;
  optional uint32 file_index = 13;
  optional uint64 pad1 = 14;
  optional uint64 addr3 = 15;
  optional int32 error = 16;
  optional string op_str = 17;
}
message IoUringShortWriteFtraceEvent {
  optional uint64 ctx = 1;
  optional uint64 fpos = 2;
  optional uint64 wanted = 3;
  optional uint64 got = 4;
}
message IoUringSubmitSqeFtraceEvent {
  optional uint64 ctx = 1;
  optional uint32 opcode = 2;
  optional uint64 user_data = 3;
  optional uint32 force_nonblock = 4;
  optional uint32 sq_thread = 5;
  optional uint64 req = 6;
  optional uint32 flags = 7;
  optional string op_str = 8;
}
message IoUringTaskAddFtraceEvent {
  optional uint64 ctx = 1;
  optional uint32 opcode = 2;
  optional uint64 user_data = 3;
  optional int32 mask = 4;
  optional uint64 req = 5;
  optional string op_str = 6;
}
message IoUringTaskWorkRunFtraceEvent {
  optional uint64 tctx = 1;
  optional uint32 count = 2;
  optional uint32 loops = 3;
}
