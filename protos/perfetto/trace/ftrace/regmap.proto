// Autogenerated by:
// ../../src/tools/ftrace_proto_gen/ftrace_proto_gen.cc
// Do not edit.

syntax = "proto2";
package perfetto.protos;

message RegcacheDropRegionFtraceEvent {
  optional string name = 1;
  optional uint32 from = 2;
  optional uint32 to = 3;
}
message RegcacheSyncFtraceEvent {
  optional string name = 1;
  optional string status = 2;
  optional string type = 3;
}
message RegmapAsyncCompleteDoneFtraceEvent {
  optional string name = 1;
}
message RegmapAsyncCompleteStartFtraceEvent {
  optional string name = 1;
}
message RegmapAsyncIoCompleteFtraceEvent {
  optional string name = 1;
}
message RegmapAsyncWriteStartFtraceEvent {
  optional string name = 1;
  optional uint32 reg = 2;
  optional int32 count = 3;
}
message RegmapBulkReadFtraceEvent {
  optional string name = 1;
  optional uint32 reg = 2;
  optional string buf = 3;
  optional int32 val_len = 4;
}
message RegmapBulkWriteFtraceEvent {
  optional string name = 1;
  optional uint32 reg = 2;
  optional string buf = 3;
  optional int32 val_len = 4;
}
message RegmapCacheBypassFtraceEvent {
  optional string name = 1;
  optional int32 flag = 2;
}
message RegmapCacheOnlyFtraceEvent {
  optional string name = 1;
  optional int32 flag = 2;
}
message RegmapHwReadDoneFtraceEvent {
  optional string name = 1;
  optional uint32 reg = 2;
  optional int32 count = 3;
}
message RegmapHwReadStartFtraceEvent {
  optional string name = 1;
  optional uint32 reg = 2;
  optional int32 count = 3;
}
message RegmapHwWriteDoneFtraceEvent {
  optional string name = 1;
  optional uint32 reg = 2;
  optional int32 count = 3;
}
message RegmapHwWriteStartFtraceEvent {
  optional string name = 1;
  optional uint32 reg = 2;
  optional int32 count = 3;
}
message RegmapRegReadFtraceEvent {
  optional string name = 1;
  optional uint32 reg = 2;
  optional uint32 val = 3;
}
message RegmapRegReadCacheFtraceEvent {
  optional string name = 1;
  optional uint32 reg = 2;
  optional uint32 val = 3;
}
message RegmapRegWriteFtraceEvent {
  optional string name = 1;
  optional uint32 reg = 2;
  optional uint32 val = 3;
}
